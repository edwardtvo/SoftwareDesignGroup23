{"version":3,"sources":["components/custom-bcrypt.js","images/cougar-gas.jpeg","components/NavBar.js","components/QuoteForm.js","store/constant/action-types.js","components/ProfileManagement.js","images/cougar-gas.png","components/Login.js","components/Registration.js","components/History.js","components/AccColumns.js","components/AccountDetails.js","components/Home.js","App.js","reportWebVitals.js","fonts/NotoSansSC-Medium.otf","store/reducers/auth_reducers.js","store/reducers/index.js","index.js"],"names":["md5","require","module","exports","hash","rawPassword","options","salt","Date","getTime","rounds","hashed","i","compare","hashedPassword","split","this","error","Error","message","NavBar","props","useCookies","setCookie","useState","loggedIn","is_logged_in","setLoggedIn","history","useHistory","Navbar","bg","variant","sticky","expand","className","src","logo","alt","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","onClick","e","path","window","location","reload","push","axios","interceptors","request","use","config","origin","URL","url","allowedOrigins","token","localStorage","getItem","includes","headers","authorization","Promise","reject","QuoteForm","location_factor","setLocation_factor","rate_history_factor","setRate_history_factor","gallons_requested_factor","setGallons_requested_factor","margin","setMargin","suggested_price","setSuggestedPrice","final_price","setFinal_price","validated","setValidated","username","setUsername","gallons","setGallons","gallonsInvalid","setGallonsInvalid","checked","setChecked","show","setShow","delivery_date","setDeliveryDate","disableButton","setDisableButton","isLoading","setLoading","deliveryAddress","setDeliveryAddress","cookies","useEffect","console","log","user","post","then","res","status","data","address2","undefined","address1","combined_address","state","catch","resolve","setTimeout","handleClose","Container","Row","Col","md","style","Form","noValidate","onSubmit","event","currentTarget","checkValidity","stopPropagation","preventDefault","Group","controlId","Label","InputGroup","hasValidation","Control","required","isInvalid","type","placeholder","min","value","onChange","parseInt","target","Feedback","Check","label","feedback","selected","date","minDate","showDisabledMonthNavigation","Button","disable","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","Body","parseFloat","toString","toFixed","Footer","quoteObj","gallons_requested","delivery_address","price_per_gallon","UPDATE_USER","ProfileManagement","auth","fullname","setFullname","setAddress1","setAddress2","city","setCity","setState","zip","setZip","setCookieusername","userData","setUserData","modal_show","setModalShow","modal_show_validation","setModalShowValidation","fluid","form","userObj","cookie_username","match","handleRegexValidation","name","as","Login","password","setPassword","alert","err","Registration","handleSubmit","History","userList","setUserList","striped","bordered","hover","map","amount_due","ACCCOLUMNS","accessor","AccountDetails","columns","useMemo","AccDetails","tableInstance","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","headerGroup","getHeaderGroupProps","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","to","Home","cougar_gas","App","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","AuthReducer","action","ACTION_TYPES","payload","persistedState","serializedState","JSON","parse","loadFromLocalStorage","store","createStore","reducers","composeWithDevTools","applyMiddleware","reduxThunk","ReactDOM","CookiesProvider","document","getElementById"],"mappings":"sJAAMA,EAAMC,EAAQ,KAEpBC,EAAOC,QAAU,CAQfC,KARe,SAQVC,GAYH,IAZ+B,IAAfC,EAAc,uDAAJ,GAIpBC,EAAOD,EAAQC,KAAOD,EAAQC,MAAO,IAAIC,MAAOC,UAKhDC,EAASJ,EAAQI,OAASJ,EAAQI,OAAS,GAE7CC,EAASX,EAAIK,EAAcE,GACtBK,EAAI,EAAGA,GAAKF,EAAQE,IAC3BD,EAASX,EAAIW,GAEf,MAAM,GAAN,OAAUJ,EAAV,YAAkBG,EAAlB,YAA4BC,IAS9BE,QAhCe,SAgCPR,EAAaS,GACnB,IAAK,IAAD,EACuBA,EAAeC,MAAM,KAD5C,mBACMR,EADN,KACYG,EADZ,KAGF,OAAOI,IADmBE,KAAKZ,KAAKC,EAAa,CAAEE,OAAMG,WAEzD,MAAOO,GACP,MAAMC,MAAMD,EAAME,a,siBCxCT,MAA0B,wC,gBC8C1BC,EAvCA,SAACC,GAAW,IAAD,EACOC,YAAW,CAAC,SADnB,mBACNC,GADM,aAEcC,mBAASH,EAAMI,UAF7B,mBAEfC,EAFe,KAEDC,EAFC,KAGlBC,EAAUC,cAYd,OACA,8BACI,eAACC,EAAA,EAAD,CAAQC,GAAG,eAAeC,QAAQ,OAAOC,OAAO,MAAMC,OAAO,KAA7D,UACI,qBAAKC,UAAU,YAAYC,IAAKC,EAAMC,IAAI,SAC1C,cAACR,EAAA,EAAOS,MAAR,CAAcC,KAAK,QAAQL,UAAU,aAArC,6BACA,cAACL,EAAA,EAAOW,OAAR,CAAeC,gBAAc,qBAC7B,cAACZ,EAAA,EAAOa,SAAR,CAAiBC,GAAG,mBAApB,SACI,eAACC,EAAA,EAAD,CAAKV,UAAU,UAAf,UAII,cAACU,EAAA,EAAIC,KAAL,CAAUX,UAAWT,EAAe,8BAAgC,cAAgBc,KAAK,QAAzF,kBACA,cAACK,EAAA,EAAIC,KAAL,CAAUX,UAAWT,EAAe,8BAAgC,cAAgBc,KAAK,qBAAzF,gCACA,cAACK,EAAA,EAAIC,KAAL,CAAUX,UAAWT,EAAe,8BAAgC,cAAgBc,KAAK,YAAzF,uBACA,cAACK,EAAA,EAAIC,KAAL,CAAUX,UAAWT,EAAe,8BAAgC,cAAgBc,KAAK,gBAAzF,2BACA,cAACK,EAAA,EAAIC,KAAL,CAAUX,UAAWT,EAAe,8BAAgC,cAAgBqB,QAAS,SAACC,GAAD,OAtBzGzB,EAAU,OAAQ,GAAI,CAClB0B,KAAM,MAEVtB,GAAY,GACZuB,OAAOC,SAASC,cAChBxB,EAAQyB,KAAK,MAiBD,gC,OC5BpBpD,EAAQ,KAORqD,IAAMC,aAAaC,QAAQC,KACvB,SAAAC,GAAW,IACAC,EAAU,IAAIC,IAAIF,EAAOG,KAAzBF,OACDG,EAAiB,CAJhB,yBAKDC,EAAQC,aAAaC,QAAQ,SAInC,OAHIH,EAAeI,SAASP,KACxBD,EAAOS,QAAQC,cAAf,iBAAyCL,IAEtCL,KAEX,SAAAzC,GACI,OAAOoD,QAAQC,OAAOrD,MAI9B,IAiQesD,EAjQG,WAUd,IAVoB,EAY0B/C,mBAAS,GAZnC,mBAYbgD,EAZa,KAYIC,EAZJ,OAakCjD,mBAAS,GAb3C,mBAabkD,EAba,KAaQC,EAbR,OAc4CnD,mBAAS,GAdrD,mBAcboD,EAda,KAcaC,EAdb,OAeQrD,mBAAS,GAfjB,mBAebsD,EAfa,KAeLC,EAfK,OAgByBvD,mBAAS,GAhBlC,mBAgBbwD,EAhBa,KAgBIC,EAhBJ,OAiBkBzD,mBAAS,GAjB3B,mBAiBb0D,EAjBa,KAiBAC,EAjBA,OAkBc3D,oBAAS,GAlBvB,mBAkBb4D,EAlBa,KAkBFC,EAlBE,OAmBY7D,mBAAS,IAnBrB,mBAmBb8D,EAnBa,KAmBHC,EAnBG,OAoBU/D,mBAAS,GApBnB,mBAoBbgE,EApBa,KAoBJC,EApBI,OAqBwBjE,mBAAS,GArBjC,mBAqBbkE,EArBa,KAqBGC,EArBH,QAsBUnE,oBAAS,GAtBnB,qBAsBboE,GAtBa,MAsBJC,GAtBI,SAuBIrE,oBAAS,GAvBb,qBAuBbsE,GAvBa,MAuBPC,GAvBO,SAwBqBvE,mBAAS,IAAIhB,MAxBlC,qBAwBbwF,GAxBa,MAwBEC,GAxBF,SAyBsBzE,mBAAS,QAzB/B,qBAyBb0E,GAzBa,MAyBEC,GAzBF,SA0BY3E,oBAAS,GA1BrB,qBA0Bb4E,GA1Ba,MA0BFC,GA1BE,SA4B0B7E,mBAAS,IA5BnC,qBA4Bb8E,GA5Ba,MA4BIC,GA5BJ,SA6BSjF,YAAW,CAAC,SA7BrB,qBA6BbkF,GA7Ba,MA+BhB5E,IA/BgB,MA+BNC,eAGd4E,qBAAU,WACNC,QAAQC,IAAI,aAAcH,GAAQI,MAClCtD,IAAMuD,KAAK,2CAA4C,CAACvB,SAAUkB,GAAQI,OACrEE,MAAK,SAACC,GACH,GAAmB,MAAfA,EAAIC,OAAgB,CAKpB,GAJAN,QAAQC,IAAI,aAAcI,EAAIE,MAE9B1B,EAAYiB,GAAQI,MAEM,OAAtBG,EAAIE,KAAKC,eAA2CC,IAAtBJ,EAAIE,KAAKC,SACvCR,QAAQC,IAAI,yBACZJ,GAAmBQ,EAAIE,KAAKG,UAC5BV,QAAQC,IAAI,aAAcI,EAAIE,KAAKG,cAChC,CACHV,QAAQC,IAAI,aAAcI,EAAIE,KAAKC,UACnC,IAAIG,EAAmBN,EAAIE,KAAKG,SAAW,KAAOL,EAAIE,KAAKC,SAC3DR,QAAQC,IAAI,qBAAsBU,GAClCd,GAAmBQ,EAAIE,KAAKG,SAAW,KAAOL,EAAIE,KAAKC,UAI3DR,QAAQC,IAAII,EAAIE,KAAKK,OACE,OAAnBP,EAAIE,KAAKK,MACT7C,EAAmB,KAEnBA,EAAmB,KAEvBiC,QAAQC,IAAIrB,GACZhC,IAAMuD,KAAK,sCAAuC,CAACvB,SAAUkB,GAAQI,OAChEE,MAAK,SAACC,GACc,KAAbA,EAAIE,KAAatC,EAAuB,KACvCA,EAAuB,WAGd,MAAfoC,EAAIC,SACXN,QAAQC,IAAI,eAAgBI,EAAIC,QAChCpF,GAAQyB,KAAK,SAElBkE,OAAM,SAACtG,GACVyF,QAAQC,IAAI,8CAA+C1F,MAG3DmF,IA/FD,IAAI/B,SAAQ,SAACmD,GAAD,OAAaC,WAAWD,EAAS,QAgGnBV,MAAK,WAC1BT,IAAW,QAGpB,CAACD,KAGJK,qBAAU,WACNC,QAAQC,IAAR,2BAAgCnC,IAChCkC,QAAQC,IAAR,+BAAoCjC,IACpCgC,QAAQC,IAAR,oCAAyC/B,IAEzCG,EA9EqB,KA8ESP,EAAkBE,EAAsBE,EA/EnD,KAgFnBK,EA/EqB,IA+EgBH,GACrCK,EAAeK,EAAUR,GAEzB0B,QAAQC,IAAR,6BAAkC7B,IAClC4B,QAAQC,IAAR,sCAA2C3B,IAC3C0B,QAAQC,IAAR,kCAAuCzB,IAGvCiB,GAAiB,WAElB,CAAC3B,EAAiBE,EAAqBE,EAA0BY,IAEpE,IAgCMkC,GAAc,WAChBrC,GAAa,GACbU,IAAQ,IAGZ,OACI,8BACI,eAAC4B,EAAA,EAAD,CAAWxF,UAAU,kBAArB,UACI,oBAAIA,UAAU,aAAd,0BACA,eAACyF,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,MACR,cAACD,EAAA,EAAD,CAAKE,MAAO,CAAC,WAAc,QAA3B,SACI,eAACC,EAAA,EAAD,CAAMC,YAAU,EAAC7C,UAAWA,EAAW8C,SA5CzC,SAACC,IAEc,IADhBA,EAAMC,cACVC,iBACLF,EAAMG,kBACNH,EAAMI,mBAENJ,EAAMI,iBACNxC,IAAQ,GACRV,GAAa,GACbc,GAAiB,UAmCL,UAEI,cAAC6B,EAAA,EAAKQ,MAAN,CAAYC,UAAU,sBAAtB,SAEI,eAACb,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAK1F,UAAU,WAAW4F,MAAO,CAAC,YAAe,OAAQ,WAAc,SAAvE,SACI,cAACC,EAAA,EAAKU,MAAN,mCAEJ,cAACb,EAAA,EAAD,CAAK1F,UAAU,WAAf,SACI,eAACwG,EAAA,EAAD,CAAYC,eAAa,EAAzB,UACA,cAACZ,EAAA,EAAKa,QAAN,CAAcC,UAAQ,EACRC,UAAWrD,EACXvD,UAAU,YACV6G,KAAK,SACLC,YAAY,IACZC,IAAI,IACJC,MAAO3D,EACP4D,SAAU,SAACpG,GACPmD,GAAiB,QACjBV,EAAW4D,SAASrG,EAAEsG,OAAOH,QAGzBtE,EADAW,EAAU,IACkB,IAEA,KAG5BG,EADAH,EAAU,EACQ,EACI,MAG5C,cAACwC,EAAA,EAAKa,QAAQU,SAAd,CAAuBP,KAAK,UAA5B,iEAQZ,cAAChB,EAAA,EAAKQ,MAAN,CAAYC,UAAU,oBAAtB,SACI,eAACb,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,OAAO3F,UAAU,cAAzB,SAAuC,mBACnC4F,MAAO,CAAC,cAAe,QADY,SACFzB,OACrC,cAACuB,EAAA,EAAD,CAAKE,MAAO,CAAC,WAAc,QAA3B,SACI,cAACC,EAAA,EAAKwB,MAAN,CAAYV,UAAQ,EACRC,WAAYnD,GACZoD,KAAK,WACLS,MAAM,4BACNC,SAAS,wBACTN,SAAU,WACNvD,IAAYD,cAcxC,cAACoC,EAAA,EAAKQ,MAAN,UACI,eAACX,EAAA,EAAD,WACI,cAACG,EAAA,EAAKU,MAAN,CAAYX,MAAO,CAAC,YAAe,QAAS,aAAgB,SAA5D,6BAEA,cAAC,IAAD,CACI5F,UAAU,kBACVwH,SAAU3D,GACVmD,MAAOnD,GACPoD,SAAU,SAAAQ,GACN3D,GAAgB2D,IAEpBC,QAAS,IAAIrJ,KACbsJ,6BAA2B,SAKvC,qBAAK/B,MAAO,CAAC,YAAe,SAA5B,SAAsC,cAACgC,EAAA,EAAD,CAAQ/H,QAAQ,SAASgH,KAAK,SACtBgB,QAAS9D,GADjB,iCAOlD,eAAC+D,EAAA,EAAD,CACInE,KAAMA,GACNoE,OAAQxC,GACRyC,SAAS,SACTC,UAAU,EAJd,UAMI,cAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACL,EAAA,EAAMM,MAAP,gCAEJ,eAACN,EAAA,EAAMO,KAAP,WACI,qDAAwBC,WAAWzF,EAAgB0F,YAAYC,QAAQ,MACvE,+CAAkBF,WAAWvF,EAAYwF,YAAYC,QAAQ,SAEjE,eAACV,EAAA,EAAMW,OAAP,WACI,cAACb,EAAA,EAAD,CAAQ/H,QAAQ,SAASe,QArIzB,WAChB,IAAM8H,EAAW,CACbvF,SAAUA,EACVwF,kBAAmBtF,EACnBuF,iBAAkBzE,GAClBN,cAAeA,GACfgF,iBAAkBhG,GAEtB1B,IAAMuD,KAAK,0CAA2CgE,GACjD/D,MAAK,SAACC,GACHL,QAAQC,IAAII,EAAIE,SACjBM,OAAM,SAACtG,GACVyF,QAAQC,IAAI1F,MAGhBoE,GAAa,GACbU,IAAQ,IAqHQ,iCACA,cAACgE,EAAA,EAAD,CAAQ/H,QAAQ,YAAYe,QAAS2E,GAArC,2C,QCxRXuD,G,aAAc,e,OC8SZC,MA5Rf,SAA2B7J,EAAM8J,GAAO,IAAD,EAEL3J,oBAAS,GAFJ,mBAE9B4E,EAF8B,KAEnBC,EAFmB,OAGH7E,oBAAS,GAHN,mBAG9B4D,EAH8B,KAGnBC,EAHmB,OAIL7D,mBAAS,IAJJ,mBAIpB+D,GAJoB,aAKL/D,mBAAS,IALJ,mBAK9B4J,EAL8B,KAKpBC,EALoB,OAML7J,mBAAS,IANJ,mBAM9B4F,EAN8B,KAMpBkE,EANoB,OAOL9J,mBAAS,IAPJ,mBAO9B0F,EAP8B,KAOpBqE,EAPoB,OAQb/J,mBAAS,IARI,mBAQ9BgK,EAR8B,KAQxBC,EARwB,OASXjK,mBAAS,IATE,mBAS9B8F,EAT8B,KASvBoE,EATuB,OAUflK,mBAAS,IAVM,mBAU9BmK,EAV8B,KAUzBC,EAVyB,OAWQpK,mBAAS,IAXjB,mBAWbqK,GAXa,aAYRvK,YAAW,CAAC,SAZJ,mBAY9BkF,GAZ8B,cAaLhF,mBAAS,KAbJ,qBAa9BsK,GAb8B,MAapBC,GAboB,SAcFvK,oBAAS,GAdP,qBAc9BwK,GAd8B,MAclBC,GAdkB,SAemBzK,oBAAS,GAf5B,qBAe9B0K,GAf8B,MAePC,GAfO,MAkBjCvK,GAAQC,cAkGZ,OAhGE4E,qBAAU,WAGNnD,IAAMuD,KAAK,2CAA4C,CAAEvB,SAAUkB,GAAQI,OAC1EE,MAAK,SAACC,GACc,MAAfA,EAAIC,QACR+E,GAAYhF,EAAIE,MAChB4E,EAAkBrF,GAAQI,MAC1BrB,EAAYuG,GAASxG,UACrB+F,EAAYS,GAASV,UACrBE,EAAYQ,GAAS1E,UACrBmE,EAAYO,GAAS5E,UACrBuE,EAAQK,GAASN,MACjBE,EAASI,GAASxE,OAClBsE,EAAOE,GAASH,MAEQ,MAAf5E,EAAIC,SACXN,QAAQC,IAAI,eAAgBI,EAAIC,QAChCpF,GAAQyB,KAAK,SAEdkE,OAAM,SAACtG,GACRyF,QAAQC,IAAI,8CAA8C1F,MAGxDmF,GAhDH,IAAI/B,SAAQ,SAACmD,GAAD,OAAaC,WAAWD,EAAS,QAiDnBV,MAAK,WAC5BT,GAAW,QAGd,CAACG,GAAQI,KAAMhF,GAASwE,EAAW0F,GAAS1E,SAAU0E,GAAS5E,SAAU4E,GAASN,KAAMM,GAASV,SAAUU,GAASxE,MAAOwE,GAASxG,SAAUwG,GAASH,MAoE5J,gCACA,eAAChE,EAAA,EAAD,CAAWyE,OAAK,EAACjK,UAAU,kBAA3B,UAEA,oBAAIA,UAAU,aAAd,gCACA,qBAAK4F,MAAO,CAAC,WAAa,UAEtB,eAACC,EAAA,EAAD,CAAMC,YAAU,EAAC7C,UAAWA,EAAW8C,SAlDxB,SAACC,GACpB,IAAMkE,EAAOlE,EAAMC,cAInB,GAHA/C,GAAa,GACb8C,EAAMI,kBAEuB,IAAzB8D,EAAKhE,gBACPF,EAAMG,sBACD,CAEP,IAAMgE,EAAU,CACdC,gBAAiB/F,GAAQI,KACzBtB,SAAUkB,GAAQI,KAClBwE,SAAUA,EACVhE,SAAUA,EACVF,SAAUA,EACVsE,KAAMA,EACNlE,MAAOA,EACPqE,IAAKA,GAGPjF,QAAQC,IAAI2F,IAnCgB,SAACA,GAC7B,OAAgD,MAA1CA,EAAQlB,SAASoB,MAAM,iBACkB,MAA1CF,EAAQlF,SAASoF,MAAM,iBACe,MAAtCF,EAAQd,KAAKgB,MAAM,iBACsB,MAAzCF,EAAQhF,MAAMkF,MAAM,mBACmB,MAAvCF,EAAQX,IAAIa,MAAM,oBAEnB9F,QAAQC,IAAI,mCACL,GA6BL8F,CAAsBH,IAYxB5F,QAAQC,IAAI,+BACZtB,GAAa,GACb8G,IAAuB,KAbvBzF,QAAQC,IAAI,8BACVrD,IAAMuD,KAAK,qCAAsCyF,GAChDxF,MAAK,SAACC,GACHL,QAAQC,IAAII,EAAIE,SACjBM,OAAM,SAACtG,GACVyF,QAAQC,IAAI1F,MAEZoE,GAAa,GACb4G,IAAa,MAmBf,UACA,eAACrE,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAG,MACR,eAACD,EAAA,EAAD,CAAKC,GAAG,IAAR,UACE,cAACE,EAAA,EAAKU,MAAN,0BACA,cAACV,EAAA,EAAKa,QAAN,CAAc6D,KAAK,WACL1D,KAAK,OACLG,MAAOiC,EACPhC,SAAU,SAACpG,GAAD,OAAOqI,EAAYrI,EAAEsG,OAAOH,QACtCL,UAAQ,IACtB,cAACd,EAAA,EAAKa,QAAQU,SAAd,CAAuBP,KAAK,UAA5B,8CAEF,eAACnB,EAAA,EAAD,CAAKC,GAAG,IAAR,UACE,cAACE,EAAA,EAAKU,MAAN,yBACA,cAACV,EAAA,EAAKa,QAAN,CAAc6D,KAAK,WACL1D,KAAK,OACLG,MAAO2C,GAASxG,SAChB8D,SAAU,SAACpG,GAAD,OAAOuC,EAAYvC,EAAEsG,OAAOH,QACtCL,UAAQ,IACtB,cAACd,EAAA,EAAKa,QAAQU,SAAd,CAAuBP,KAAK,UAA5B,oEAKJ,eAACpB,EAAA,EAAD,WAEE,cAACC,EAAA,EAAD,CAAKC,GAAG,MACR,eAACD,EAAA,EAAD,CAAKC,GAAG,IAAIC,MAAO,CAAC,WAAa,QAAjC,UACE,cAACC,EAAA,EAAKU,MAAN,wBACA,cAACV,EAAA,EAAKa,QAAN,CAAc6D,KAAK,UACL1D,KAAK,OACLG,MAAO/B,EACPgC,SAAU,SAACpG,GAAD,OAAOsI,EAAYtI,EAAEsG,OAAOH,QACtCL,UAAQ,IACtB,cAACd,EAAA,EAAKa,QAAQU,SAAd,CAAuBP,KAAK,UAA5B,oCAIF,eAACnB,EAAA,EAAD,CAAKC,GAAG,IAAIC,MAAO,CAAC,WAAa,QAAjC,UACE,cAACC,EAAA,EAAKU,MAAN,uCACA,cAACV,EAAA,EAAKa,QAAN,CAAc6D,KAAK,UACL1D,KAAK,OACLG,MAAOjC,EACPkC,SAAU,SAACpG,GAAD,OAAOuI,EAAYvI,EAAEsG,OAAOH,QACtCF,YAAY,+BAM9B,eAACrB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAG,MACR,eAACD,EAAA,EAAD,CAAKC,GAAG,IAAIC,MAAO,CAAC,WAAa,QAAjC,UACA,cAACC,EAAA,EAAKU,MAAN,qBACA,cAACV,EAAA,EAAKa,QAAN,CAAc6D,KAAK,OACL1D,KAAK,OACLG,MAAOqC,EACPpC,SAAU,SAACpG,GAAD,OAAOyI,EAAQzI,EAAEsG,OAAOH,QAClCL,UAAQ,IACtB,cAACd,EAAA,EAAKa,QAAQU,SAAd,CAAuBP,KAAK,UAA5B,iCAIA,eAACnB,EAAA,EAAD,CAAKC,GAAG,IAAIC,MAAO,CAAC,WAAa,QAAjC,UACA,cAACC,EAAA,EAAKU,MAAN,sBACA,eAACV,EAAA,EAAKa,QAAN,CAAc6D,KAAO,QAAQC,GAAG,SAClBxD,MAAO7B,EACP8B,SAAU,SAACpG,GAAD,OAAO0I,EAAS1I,EAAEsG,OAAOH,QACnCL,UAAQ,EAHtB,UAIA,uCACA,wCAAmB,wCAAmB,wCACtC,wCAAmB,wCAAmB,wCACtC,wCAAmB,wCAAmB,wCACtC,wCAAmB,wCAAmB,wCACtC,wCAAmB,wCAAmB,wCACtC,wCAAmB,wCAAmB,wCACtC,wCAAmB,wCAAmB,wCACtC,wCAAmB,wCAAmB,wCACtC,wCAAmB,wCAAmB,wCACtC,wCAAmB,wCAAmB,wCACtC,wCAAmB,wCAAmB,wCACtC,wCAAmB,wCAAmB,wCACtC,wCAAmB,wCAAmB,wCACtC,wCAAmB,wCAAmB,wCACtC,wCAAmB,wCAAmB,wCACtC,wCAAmB,wCAAmB,wCACtC,wCAAmB,2CAEnB,cAACd,EAAA,EAAKa,QAAQU,SAAd,CAAuBP,KAAK,UAA5B,sCAKA,eAACnB,EAAA,EAAD,CAAKC,GAAG,IAAIC,MAAO,CAAC,WAAa,QAAjC,UACA,cAACC,EAAA,EAAKU,MAAN,0BACA,cAACV,EAAA,EAAKa,QAAN,CAAc6D,KAAK,MACLvD,MAAOwC,EACPvC,SAAU,SAACpG,GAAD,OAAO4I,EAAO5I,EAAEsG,OAAOH,QACjCH,KAAK,OACLF,UAAQ,IACtB,cAACd,EAAA,EAAKa,QAAQU,SAAd,CAAuBP,KAAK,UAA5B,iDAMF,uBAGF,eAACpB,EAAA,EAAD,WAAK,cAACC,EAAA,EAAD,CAAKC,GAAG,MAAK,cAACD,EAAA,EAAD,CAAKC,GAAG,IAAIC,MAAO,CAAC,WAAa,OAAjC,SAAyC,cAACgC,EAAA,EAAD,CAAQ/H,QAAQ,SAASgH,KAAK,SAA9B,+BAiBjD,eAACiB,EAAA,EAAD,CACInE,KAAMkG,GACN9B,OAAQ,SAAClH,GAAD,OArMKiJ,IAAa,IAmM9B,UAGI,cAAChC,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACL,EAAA,EAAMM,MAAP,kCAEJ,cAACN,EAAA,EAAMO,KAAP,UACI,6EAEJ,cAACP,EAAA,EAAMW,OAAP,UACI,cAACb,EAAA,EAAD,CAAQ/H,QAAQ,SAASe,QAAS,kBA9M7BnB,GAAQyB,KAAK,cA8MlB,kCAGR,eAAC4G,EAAA,EAAD,CACInE,KAAMoG,GADV,UAGI,cAACjC,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACL,EAAA,EAAMM,MAAP,gCAEJ,eAACN,EAAA,EAAMO,KAAP,WACI,gFAAuD,uBACvD,+EAAsD,uBACtD,2EAAkD,uBAClD,4DAAmC,uBACnC,6EAEJ,cAACP,EAAA,EAAMW,OAAP,UACI,cAACb,EAAA,EAAD,CAAQ/H,QAAQ,SAASe,QAAS,kBA7NxBoJ,IAAuB,IA6NjC,4BCtST,MAA0B,uCCe1BlM,EAAQ,KAKvB,IA2Ie2M,EA3ID,SAACvL,GAAW,IAAD,EACWG,oBAAS,GADpB,mBAChB4D,EADgB,KACLC,EADK,OAEW7D,oBAAS,GAFpB,mBAEd4E,EAFc,KAEHC,EAFG,OAGW7E,mBAAS,IAHpB,mBAGd8D,EAHc,KAGJC,EAHI,OAIW/D,mBAAS,IAJpB,mBAIdqL,EAJc,KAIJC,EAJI,OAKWtL,oBAAS,GALpB,gCAOQF,YAAW,CAAC,UAPpB,mBAOdkF,EAPc,KAOLjF,EAPK,KAUTM,cAEZ4E,qBAAU,WACFL,GAfD,IAAI/B,SAAQ,SAACmD,GAAD,OAAaC,WAAWD,EAAS,QAgBrBV,MAAK,WAC5BT,GAAW,QAGd,CAACD,IAsDN,OACI,mCAIA,eAACuB,EAAA,EAAD,CAAWyE,OAAK,EAACjK,UAAU,gBAA3B,UAEI,qBAAK4F,MAAO,CAAC,aAAe,UAA5B,SACI,qBAAK3F,IAAKC,EAAMC,IAAI,sBAExB,qBAAKyF,MAAO,CAAC,aAAe,SAAU,cAAgB,QAAtD,SACA,oBAAI5F,UAAU,aAAd,2CAOA,eAAC6F,EAAA,EAAD,CAAMC,YAAU,EACV7C,UAAWA,EACX8C,SA7DK,SAACC,GACpB,IAAMkE,EAAOlE,EAAMC,cAKnB,GAJA/C,GAAa,GACb8C,EAAMI,kBAGuB,IAAzB8D,EAAKhE,gBACPF,EAAMG,sBACD,CAGL,IAAMgE,EAAU,CACdhH,SAAUA,EACVuH,SAAoCA,IAtBZ,SAACP,GAC7B,OAAoE,MAA/DA,EAAQO,SAASL,MAAM,sCACmB,MAA1CF,EAAQhH,SAASkH,MAAM,gBAuBtBC,CAAsBH,IAkBxBjH,GAAa,GACb0H,MAAM,0IAhBNzJ,IAAMuD,KAAK,2CAA4CyF,GACtDxF,MAAK,SAACC,GACPxF,EAAU,OAAQ+K,EAAQhH,SAAU,CAClCrC,KAAM,MAERyD,QAAQC,IAAIH,EAAQI,MACpB1D,OAAOC,SAASC,YAEbmE,OAAM,SAACyF,GACVtG,QAAQC,IAAI,8BAA+BqG,GAC3CD,MAAM,iEAER1H,GAAa,MA4BP,UAGA,eAACuC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,MACR,eAACD,EAAA,EAAD,CAAKC,GAAG,IAAR,UAEI,cAACE,EAAA,EAAKU,MAAN,uBACA,cAACV,EAAA,EAAKa,QAAN,CAAcG,KAAK,OACLI,SAAU,SAACpG,GAAD,OAAOuC,EAAYvC,EAAEsG,OAAOH,QACtCL,UAAQ,IACtB,cAACd,EAAA,EAAKa,QAAQU,SAAd,CAAuBP,KAAK,UAA5B,6CAGR,eAACpB,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,MACR,eAACD,EAAA,EAAD,WACI,cAACG,EAAA,EAAKU,MAAN,uBACA,cAACV,EAAA,EAAKa,QAAN,CAAcG,KAAK,WACLI,SAAU,SAACpG,GAAD,OAAO8J,EAAY9J,EAAEsG,OAAOH,QACtCL,UAAQ,IACtB,cAACd,EAAA,EAAKa,QAAQU,SAAd,CAAuBP,KAAK,UAA5B,0CAEJ,cAACnB,EAAA,EAAD,CAAKC,GAAG,SAEhB,uBACA,eAACF,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,MACR,cAACD,EAAA,EAAD,CAAKC,GAAG,OAAR,SAAe,cAACiC,EAAA,EAAD,CAAQ/H,QAAQ,QAAQQ,KAAK,gBAA7B,uBACf,eAACqF,EAAA,EAAD,CAAKC,GAAG,OAAR,UACI,cAACiC,EAAA,EAAD,CAAQ/H,QAAQ,SAASgH,KAAK,SAA9B,oBAAuD,OAE3D,cAACnB,EAAA,EAAD,gBCxIG5H,EAAQ,KAOvB,IAqJegN,EArJM,WAAO,IAAD,EACWzL,oBAAS,GADpB,mBAChB4D,EADgB,KACLC,EADK,OAES7D,oBAAS,GAFlB,mBAEhB4E,EAFgB,KAELC,EAFK,OAGS7E,mBAAS,IAHlB,mBAGhB8D,EAHgB,KAGNC,EAHM,OAIS/D,mBAAS,IAJlB,mBAIhBqL,EAJgB,KAINC,EAJM,OAKYtL,oBAAS,GALrB,mBAKhBwK,EALgB,KAKJC,EALI,KAOnBrK,EAAQC,cAEZ4E,qBAAU,WACFL,GAZD,IAAI/B,SAAQ,SAACmD,GAAD,OAAaC,WAAWD,EAAS,QAanBV,MAAK,WAC1BT,GAAW,QAGpB,CAACD,IAEJ,IAcM8G,EAAe,SAAC/E,GAClB,IAAMkE,EAAOlE,EAAMC,cAInB,GAHA/C,GAAa,GACb8C,EAAMI,kBAEuB,IAAzB8D,EAAKhE,gBACLF,EAAMG,sBACH,CACH,IAAMgE,EAAU,CACZhH,SAAUA,EACVuH,SAAUA,IApBQ,SAACP,GAC3B,OAAoE,MAA/DA,EAAQO,SAASL,MAAM,sCACmB,MAA1CF,EAAQhH,SAASkH,MAAM,gBAqBpBC,CAAsBH,IAetBjH,GAAa,GACb0H,MAAM,yIAfNzJ,IAAMuD,KAAK,qCAAsCyF,GAChDxF,MAAK,SAACC,GACc,iBAAbA,EAAIE,KACJ8F,MAAM,8BAENrG,QAAQC,IAAII,EAAIE,MAChBgF,GAAa,GACb5G,GAAa,OAElBkC,OAAM,SAACtG,GACN8L,MAAM,0CACNrG,QAAQC,IAAI1F,QAU5B,OACI,qCAGA,eAAC0G,EAAA,EAAD,CAAWyE,OAAK,EAACjK,UAAU,gBAA3B,UAEI,qBAAK4F,MAAO,CAAC,aAAe,UAA5B,SACY,qBAAK3F,IAAKC,EAAMC,IAAI,sBAGhC,eAACsF,EAAA,EAAD,CAAKG,MAAO,CAAC,cAAgB,QAA7B,UACI,cAACF,EAAA,EAAD,CAAKC,GAAG,MACR,cAACD,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,oBAAI3F,UAAU,aAAd,4BAEJ,cAAC0F,EAAA,EAAD,CAAKC,GAAG,SAIZ,eAACE,EAAA,EAAD,CAAQC,YAAU,EACV7C,UAAWA,EACX8C,SAAUgF,EAFlB,UAGA,eAACtF,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,MACR,eAACD,EAAA,EAAD,CAAKC,GAAG,IAAR,UACI,cAACE,EAAA,EAAKU,MAAN,uBACA,cAACV,EAAA,EAAKa,QAAN,CAAcG,KAAK,OACLG,MAAO7D,EACP8D,SAAU,SAACpG,GAAD,OAAOuC,EAAYvC,EAAEsG,OAAOH,QACtCL,UAAQ,IACtB,cAACd,EAAA,EAAKa,QAAQU,SAAd,CAAuBP,KAAK,UAA5B,6CAGR,eAACpB,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,MACR,eAACD,EAAA,EAAD,WACI,cAACG,EAAA,EAAKU,MAAN,uBACA,cAACV,EAAA,EAAKa,QAAN,CAAcG,KAAK,WACLG,MAAO0D,EACPzD,SAAU,SAACpG,GAAD,OAAO8J,EAAY9J,EAAEsG,OAAOH,QACtCL,UAAQ,IACtB,cAACd,EAAA,EAAKa,QAAQU,SAAd,CAAuBP,KAAK,UAA5B,0CAEJ,cAACnB,EAAA,EAAD,CAAKC,GAAG,SAEhB,uBACA,eAACF,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,MACR,cAACD,EAAA,EAAD,CAAKC,GAAG,OAAR,SACI,cAACiC,EAAA,EAAD,CAAQ/H,QAAQ,QAAQQ,KAAK,QAA7B,6BAEJ,eAACqF,EAAA,EAAD,CAAKC,GAAG,OAAR,UACI,cAACiC,EAAA,EAAD,CAAQ/H,QAAQ,SAASgH,KAAK,SAASjG,QAAS,SAACC,GAAD,OAAOkK,EAAalK,IAApE,qBAAyF,OAE7F,cAAC6E,EAAA,EAAD,aASI,eAACoC,EAAA,EAAD,CACInE,KAAMkG,EADV,UAGI,cAAC/B,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACL,EAAA,EAAMM,MAAP,8BAEJ,eAACN,EAAA,EAAMO,KAAP,WACI,gEACA,uBACA,sEAEJ,cAACP,EAAA,EAAMW,OAAP,UACI,cAACb,EAAA,EAAD,CAAQ/H,QAAQ,SAASe,QAAS,kBAhH9BnB,EAAQyB,KAAK,WAgHjB,4B,iCClBT8J,EA3HC,WAAO,IAAD,EACc3L,mBAAS,IADvB,mBACX4L,EADW,KACDC,EADC,OAEW/L,YAAW,CAAC,SAFvB,mBAEXkF,EAFW,UAKlBC,qBAAU,WACNnD,IAAMuD,KAAK,sCAAuC,CAACvB,SAAUkB,EAAQI,OAChEE,MAAK,SAAAC,GACFsG,EAAYtG,EAAIE,MAChBP,QAAQC,IAAI,aAAcyG,MAG7B7F,OAAM,SAAUtG,GACbyF,QAAQC,IAAI,UAAU1F,QAE/B,CAACuF,EAAQI,OAeZ,OACI,8BAGI,eAAC,IAAD,CAAsB0G,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA5C,UACI,gCACI,+BAEI,mDACA,kDACA,+CACA,kDACA,iDAGR,gCACKJ,EAASK,KAAI,SAAAxG,GACV,OACI,+BAEI,6BAAKA,EAAK6D,oBACV,6BAAK7D,EAAK8D,mBACV,6BAAK9D,EAAKjB,gBACV,6BAAKiB,EAAK+D,mBACV,6BAAK/D,EAAKyG,2B,iBCnE7BC,EAAa,CACtB,CACItD,OAAQ,OACRuD,SAAU,QAEd,CACIvD,OAAQ,UACRuD,SAAU,WAEd,CACIvD,OAAQ,OACRuD,SAAU,QAEd,CACIvD,OAAQ,QACRuD,SAAU,SAEd,CACIvD,OAAQ,WACRuD,SAAU,aC8CHC,EA1DQ,WAEnB,IAAMC,EAAUC,mBAAQ,kBAAMJ,IAAY,IACpC1G,EAAO8G,mBAAQ,kBAAMC,IAAY,IAEjCC,EAAgBC,mBAAS,CAC3BJ,UACA7G,SAGIkH,EAIeF,EAJfE,cACAC,EAGeH,EAHfG,kBACAC,EAEeJ,EAFfI,aACAC,EACeL,EADfK,KACAC,EAAeN,EAAfM,WAER,OACI,qCACQ,cAAC,EAAD,CAAQ9M,UAAU,IAE1B,kDAAW0M,KAAX,cACI,gCAEQE,EAAaZ,KAAI,SAAAe,GAAW,OACxB,8CAAQA,EAAYC,uBAApB,aAEQD,EAAYrK,QAAQsJ,KAAK,SAAAiB,GAAM,OAC3B,8CAAQA,EAAOC,kBAAf,aAAkCD,EAAOE,OAAO,wBAOxE,iDAAWR,KAAX,aAEQE,EAAKb,KAAI,SAAAoB,GAEL,OADAN,EAAWM,GAEP,8CAAQA,EAAIC,eAAZ,aAEQD,EAAIE,MAAMtB,KAAK,SAAAuB,GACX,OAAO,8CAAQA,EAAKC,gBAAb,aAA8BD,EAAKJ,OAAO,uBAQ7E,+CACA,cAAC,IAAD,CAAMM,GAAG,IAAT,6BC/BGC,EAvBF,WACT,OACI,mCACA,eAACxH,EAAA,EAAD,CAAWI,MAAO,CAAC,WAAa,SAAhC,UAEY,qBAAKA,MAAO,CAAC,aAAe,UAA5B,SACI,qBAAK3F,IAAKgN,EAAY9M,IAAI,sBAE9B,oBAAIH,UAAU,aAAa4F,MAAO,CAAC,cAAgB,SAAnD,yCACA,eAACH,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,MACR,eAACD,EAAA,EAAD,WACA,oBAAIE,MAAO,CAAC,aAAe,UAA3B,+EADA,IAC6G,uBAC7G,qBAAIA,MAAO,CAAC,UAAY,UAAxB,mBAAyC,mBAAGvF,KAAK,qBAAqBuF,MAAO,CAAC,MAAQ,OAA7C,gCAAzC,4CAEA,cAACF,EAAA,EAAD,CAAKC,GAAG,kB,4BC2DjBuH,MArDH,WAAO,IAAD,EACe/N,YAAW,CAAC,SAD3B,mBACPkF,EADO,aAEsBhF,oBAAS,IAF/B,mBAEPE,EAFO,KAEOC,EAFP,KAad,OARA8E,qBAAU,WACe,KAAjBD,EAAQI,WAAgCO,IAAjBX,EAAQI,KAC/BjF,GAAY,GAEZA,GAAY,KAEjB,CAAC6E,EAAQI,OAGR,gCACI,qBAAKzE,UAAYT,EAAoC,oBAArB,mBAAhC,SACA,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO4N,OAAK,EAACrM,KAAK,IAAIsM,UAAW3C,IACjC,cAAC,IAAD,CAAO0C,OAAK,EAACrM,KAAK,gBAAgBsM,UAAWtC,IAC7C,cAAC,IAAD,CAAOqC,OAAK,EAACrM,KAAK,SAASsM,UAAW3C,WAM9C,sBAAKzK,UAAWT,EAAe,mBAAqB,oBAApD,UACA,cAAC,EAAD,CAAQD,UAAU,IAClB,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO6N,OAAK,EAACrM,KAAK,IAAIsM,UAAWJ,IACjC,cAAC,IAAD,CAAOG,OAAK,EAACrM,KAAK,SAASsM,UAAWJ,IACtC,cAAC,IAAD,CAAOG,OAAK,EAACrM,KAAK,YAAYsM,UAAWJ,IACzC,cAAC,IAAD,CAAOG,OAAK,EAACrM,KAAK,QAAQsM,UAAWJ,IACrC,cAAC,IAAD,CAAOlM,KAAK,YAAYsM,UAAWhL,IACnC,cAAC,IAAD,CAAOtB,KAAK,qBAAqBsM,UAAWrE,IAE5C,cAAC,IAAD,CAAOjI,KAAK,gBAAgBsM,UAAWpC,IACvC,cAAC,IAAD,CAAOlK,KAAK,kBAAkBsM,UAAW1B,gBCnD9C2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB5I,MAAK,YAAkD,IAA/C6I,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,GCPC,I,OCETO,EAAe,CACjB1K,SAAU,GACVuH,SAAU,ICWCoD,EAJKC,0BAAgB,CAChCC,YDLuB,WAAmC,IAAlC7I,EAAiC,uDAAzB0I,EAAcI,EAAW,uCACzD,OAAOA,EAAOpH,MACV,KAAKqH,EACD,OAAOD,EAAOE,UAAW,EAE7B,QACI,OAAOhJ,M,2BEwBnB,IAAMiJ,EAXN,WACE,IACE,IAAMC,EAAkBxM,aAAaC,QAAQ,SAC7C,GAAwB,OAApBuM,EAA0B,OAC9B,OAAOC,KAAKC,MAAMF,GAClB,MAAOxD,GAEP,YADAtG,QAAQC,IAAIqG,IAKO2D,GAEjBC,EAAQC,sBAAYC,EAAUP,EAAgBQ,8BAClDC,0BAAgBC,OAGlBC,IAAStC,OACP,cAACuC,EAAA,EAAD,UACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACA,cAAC,EAAD,MAFF,SAMAQ,SAASC,eAAe,SAM1B7B,M","file":"static/js/main.0d6d58c1.chunk.js","sourcesContent":["const md5 = require(\"md5\");\n\nmodule.exports = {\n  /**\n   *\n   *\n   * @param { string } rawPass - the password to be hashed\n   * @param { object } [options={}] - object containing salt and rounds\n   * @returns {string} \n   */\n  hash(rawPassword, options = {}) {\n    /**\n     * salt is optional, if not provided it will be set to current timestamp\n     */\n    const salt = options.salt ? options.salt : new Date().getTime();\n\n    /**\n     * rounds is optional, if not provided it will be set to 10\n     */\n    const rounds = options.rounds ? options.rounds : 10;\n\n    let hashed = md5(rawPassword + salt);\n    for (let i = 0; i <= rounds; i++) {\n      hashed = md5(hashed);\n    }\n    return `${salt}$${rounds}$${hashed}`;\n  },\n  /**\n   *\n   *\n   * @param {string} rawPassword - the raw password\n   * @param { string } hashedPassword - the hashed password\n   * @returns\n   */\n  compare(rawPassword, hashedPassword) {\n    try {\n      const [ salt, rounds ] = hashedPassword.split('$');\n      const hashedRawPassword = this.hash(rawPassword, { salt, rounds });\n      return hashedPassword === hashedRawPassword;\n    } catch (error) {\n      throw Error(error.message);\n    }\n  }\n};","export default __webpack_public_path__ + \"static/media/cougar-gas.0b6a0bb4.jpeg\";","import {Nav, Navbar} from \"react-bootstrap\"\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { withCookies, useCookies } from 'react-cookie';\nimport logo from '../images/cougar-gas.jpeg'\nimport './NavBar.css'\n\nconst NavBar = (props) => {\n    const [cookies, setCookie] = useCookies(['user']);\n    const [is_logged_in, setLoggedIn] = useState(props.loggedIn);\n    let history = useHistory();\n\n\n    const logOut = () => {\n        // remove (reset) cookie\n        setCookie('user', '', {\n            path: '/'\n        });\n        setLoggedIn(false);\n        window.location.reload();\n        history.push('/');\n    }\n    return (\n    <div>\n        <Navbar bg='navbar-color' variant='dark' sticky='top' expand='xl'>\n            <img className=\"logo-size\" src={logo} alt=\"Logo\"/>\n            <Navbar.Brand href='/home' className='cougar-gas'>COUGAR GAS INC.</Navbar.Brand>\n            <Navbar.Toggle aria-controls='basic-navbar-nav'/>\n            <Navbar.Collapse id='basic-navbar-nav'>\n                <Nav className='ml-auto'>\n                    {/*<Nav.Link className='nav-link ml-auto' href='/home'>Home</Nav.Link>*/}\n                    {/*<Nav.Link className='nav-link ml-auto' href='/login'>Login</Nav.Link>*/}\n                    {/*<Nav.Link className='nav-link ml-auto' href='/registration'>Registration</Nav.Link>*/}\n                    <Nav.Link className={is_logged_in ? 'nav-link ml-auto display-on' : 'display-off'}  href='/home'>Home</Nav.Link>\n                    <Nav.Link className={is_logged_in ? 'nav-link ml-auto display-on' : 'display-off'}  href='/profilemanagement'>Profile Management</Nav.Link>\n                    <Nav.Link className={is_logged_in ? 'nav-link ml-auto display-on' : 'display-off'}  href='/getquote' >Get Quote</Nav.Link>\n                    <Nav.Link className={is_logged_in ? 'nav-link ml-auto display-on' : 'display-off'}  href='/quotehistory' >Quote History</Nav.Link>\n                    <Nav.Link className={is_logged_in ? 'nav-link ml-auto display-on' : 'display-off'}  onClick={(e) => logOut()}>Log Out</Nav.Link>\n\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    </div>\n    )\n}\n\nexport default NavBar","import {Container, Button, Form, Row, Col, Modal, InputGroup} from 'react-bootstrap'\nimport React, {useEffect, useState} from \"react\";\nimport DatePicker from 'react-datepicker'\nimport NavBar from './NavBar'\nimport {withCookies, useCookies} from 'react-cookie';\nimport {useHistory} from \"react-router-dom\";\nimport axios from 'axios';\nimport './QuoteForm.css'\n\nrequire('react-datepicker/dist/react-datepicker.css')\n\nfunction simulateNetworkRequest() {\n    return new Promise((resolve) => setTimeout(resolve, 100));\n}\n\nconst apiUrl = 'http://localhost:4000';\naxios.interceptors.request.use(\n    config => {\n        const {origin} = new URL(config.url);\n        const allowedOrigins = [apiUrl];\n        const token = localStorage.getItem('token');\n        if (allowedOrigins.includes(origin)) {\n            config.headers.authorization = `Bearer ${token}`;\n        }\n        return config;\n    },\n    error => {\n        return Promise.reject(error);\n    }\n);\n\nconst QuoteForm = () => {\n    /*\n    Form Validation https://react-bootstrap.netlify.app/components/forms/#forms-validation-input-group\n    handleSubmit function checks that al required fields contain valid input\n    Form.Control.Feedback prompts user to correct info if necessary\n    Cannot submit form without validation\n    To fix immediate refresh on click/submit https://github.com/react-bootstrap/react-bootstrap/issues/1510\n    Stop modal from appearing if validation check fails https://stackoverflow.com/questions/58753515/bootstrap-4-validation-disable-submit-button-until-form-validated\n    */\n\n    const company_factor = 0.1;\n    const price_per_gallon = 1.50;\n    const [location_factor, setLocation_factor] = useState(0.00)\n    const [rate_history_factor, setRate_history_factor] = useState(0.00)\n    const [gallons_requested_factor, setGallons_requested_factor] = useState(0.00)\n    const [margin, setMargin] = useState(0.00)\n    const [suggested_price, setSuggestedPrice] = useState(0.00)\n    const [final_price, setFinal_price] = useState(0.00)\n    const [validated, setValidated] = useState(false)\n    const [username, setUsername] = useState('')\n    const [gallons, setGallons] = useState(0)\n    const [gallonsInvalid, setGallonsInvalid] = useState(1);\n    const [checked, setChecked] = useState(false)\n    const [show, setShow] = useState(false)\n    const [delivery_date, setDeliveryDate] = useState(new Date())\n    const [disableButton, setDisableButton] = useState('true');\n    const [isLoading, setLoading] = useState(false);\n    /* address from token retrieved here */\n    const [deliveryAddress, setDeliveryAddress] = useState('');\n    const [cookies, setCookie] = useCookies(['user'])\n\n    let history = useHistory();\n\n\n    useEffect(() => {\n        console.log('username: ', cookies.user);\n        axios.post('http://localhost:4000/users/current_user', {username: cookies.user})\n            .then((res) => {\n                if (res.status === 200) {\n                    console.log('res.data: ', res.data);\n                    // Set username\n                    setUsername(cookies.user)\n                    // Get user address info\n                    if (res.data.address2 === null || res.data.address2 === undefined) {\n                        console.log('address2 is undefined');\n                        setDeliveryAddress(res.data.address1);\n                        console.log('address1: ', res.data.address1);\n                    } else {\n                        console.log('address2: ', res.data.address2);\n                        let combined_address = res.data.address1 + ', ' + res.data.address2;\n                        console.log('combined_address: ', combined_address)\n                        setDeliveryAddress(res.data.address1 + ', ' + res.data.address2);\n                    }\n\n                    // Determine location factor\n                    console.log(res.data.state)\n                    if (res.data.state === \"TX\") {\n                        setLocation_factor(0.02)\n                    } else {\n                        setLocation_factor(0.04)\n                    }\n                    console.log(username)\n                    axios.post('http://localhost:4000/users/history', {username: cookies.user})\n                        .then((res) => {\n                            if (res.data === \"\") setRate_history_factor(0.01)\n                            else setRate_history_factor(0)\n                        })\n\n                } else if (res.status === 404) {\n                    console.log('res.status: ', res.status)\n                    history.push('/')\n                }\n            }).catch((error) => {\n            console.log('Error trying to fetch user data from cookie', error);\n        })\n\n        if (isLoading) {\n            simulateNetworkRequest().then(() => {\n                setLoading(false);\n            });\n        }\n    }, [isLoading]);\n\n    /* Ensure that factors are updated before margin and price are calculated */\n    useEffect(() => {\n        console.log(`location factor: ${location_factor}`)\n        console.log(`rate history factor: ${rate_history_factor}`)\n        console.log(`gallons requested factor: ${gallons_requested_factor}`)\n\n        setMargin(price_per_gallon * (location_factor - rate_history_factor + gallons_requested_factor + company_factor));\n        setSuggestedPrice(price_per_gallon + margin);\n        setFinal_price(gallons * suggested_price);\n\n        console.log(`calculated margin: ${margin}`)\n        console.log(`calculated suggested price: ${suggested_price}`)\n        console.log(`calculated final price: ${final_price}`)\n\n        // Enable \"Get Quote\" button\n        setDisableButton('false');\n\n    }, [location_factor, rate_history_factor, gallons_requested_factor, gallons])\n\n    const calcQuote = (event) => {\n        const form = event.currentTarget;\n        if (form.checkValidity() === false) {\n            event.stopPropagation()\n            event.preventDefault()\n        } else {\n            event.preventDefault();\n            setShow(true)\n            setValidated(true)\n            setDisableButton('true');\n        }\n    }\n\n    const submitQuote = () => {\n        const quoteObj = {\n            username: username,\n            gallons_requested: gallons,\n            delivery_address: deliveryAddress,\n            delivery_date: delivery_date,\n            price_per_gallon: suggested_price\n        }\n        axios.post('http://localhost:4000/users/quoteupdate', quoteObj)\n            .then((res) => {\n                console.log(res.data)\n            }).catch((error) => {\n            console.log(error)\n        });\n\n        setValidated(false);\n        setShow(false);\n    }\n\n    const handleClose = () => {\n        setValidated(false);\n        setShow(false);\n    }\n\n    return (\n        <div>\n            <Container className='profman-padding'>\n                <h1 className=\"title-page\">Get a Quote:</h1>\n                <Row>\n                    <Col md=\"4\"/>\n                    <Col style={{\"paddingTop\": \"50px\"}}>\n                        <Form noValidate validated={validated} onSubmit={calcQuote}>\n                            {/*Gallon Request*/}\n                            <Form.Group controlId='validationGallonReq'>\n\n                                <Row>\n                                    <Col className='col-auto' style={{\"paddingLeft\": \"40px\", \"paddingTop\": \"0.5em\"}}>\n                                        <Form.Label>Gallons Requested:</Form.Label>\n                                    </Col>\n                                    <Col className='col-auto'>\n                                        <InputGroup hasValidation>\n                                        <Form.Control required\n                                                      isInvalid={gallonsInvalid}\n                                                      className='gallonReq'\n                                                      type='number'\n                                                      placeholder='0'\n                                                      min='1'\n                                                      value={gallons}\n                                                      onChange={(e) => {\n                                                          setDisableButton('true');\n                                                          setGallons(parseInt(e.target.value))\n                                                          // Determine gallons requested factor\n                                                          if (gallons < 1000) {\n                                                              setGallons_requested_factor(0.03);\n                                                          } else {\n                                                              setGallons_requested_factor(0.02)\n                                                          }\n                                                          if (gallons > 0) {\n                                                              setGallonsInvalid(0)\n                                                          } else {setGallonsInvalid(1)}\n                                                      }}\n                                        />\n                                        <Form.Control.Feedback type='invalid'>Please provide a\n                                            number greater than zero</Form.Control.Feedback>\n                                        </InputGroup>\n                                    </Col>\n                                </Row>\n                            </Form.Group>\n\n                            {/*Verify Address*/}\n                            <Form.Group controlId='validationAddress'>\n                                <Row>\n                                    <Col md=\"auto\" className=\"address-box\"><p\n                                        style={{\"font-weight\": \"bold\"}}>{deliveryAddress}</p></Col>\n                                    <Col style={{\"paddingTop\": \"20px\"}}>\n                                        <Form.Check required\n                                                    isInvalid={!checked}\n                                                    type='checkbox'\n                                                    label='Correct Delivery Address?'\n                                                    feedback='Please verify address'\n                                                    onChange={() => {\n                                                        setChecked(!checked)\n                                                    }}\n                                        />\n                                    </Col>\n                                </Row>\n                            </Form.Group>\n\n                            {/*Delivery Date*/}\n                            {/* Delivery Date validated using react-datepicker DatePicker\n                https://reactdatepicker.com/\n                https://github.com/Hacker0x01/react-datepicker/issues/879\n\n                possible alt date picker https://getdatepicker.com/4/\n                */}\n                            <Form.Group>\n                                <Col>\n                                    <Form.Label style={{\"paddingLeft\": \"4.2em\", \"paddingRight\": \"0.8em\"}}>Delivery\n                                        Date: </Form.Label>\n                                    <DatePicker\n                                        className='delivDatePicker'\n                                        selected={delivery_date}\n                                        value={delivery_date}\n                                        onChange={date => {\n                                            setDeliveryDate(date)\n                                        }}\n                                        minDate={new Date()}\n                                        showDisabledMonthNavigation\n                                    />\n                                </Col>\n                            </Form.Group>\n\n                            <div style={{\"paddingLeft\": \"140px\"}}><Button variant='danger' type='submit'\n                                                                          disable={disableButton}>Get Quote</Button>\n                            </div>\n                        </Form>\n                    </Col>\n                </Row>\n\n                <Modal\n                    show={show}\n                    onHide={handleClose}\n                    backdrop='static'\n                    keyboard={false}\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title>Calculated Cost</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <p>Price per gallon: $ {parseFloat(suggested_price.toString()).toFixed(2)}</p>\n                        <p>Total cost: $ {parseFloat(final_price.toString()).toFixed(2)}</p>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant='danger' onClick={submitQuote}>Submit Confirmation</Button>\n                        <Button variant='secondary' onClick={handleClose}>Get Another Quote</Button>\n                    </Modal.Footer>\n                </Modal>\n            </Container>\n        </div>\n    )\n}\n\nexport default QuoteForm","export const UPDATE_USER = \"UPDATE_USER\";","import { Container, Button, Form, Row, Col, Modal } from 'react-bootstrap'\nimport React, { useEffect, useState } from \"react\";\nimport NavBar from \"./NavBar\";\nimport { connect } from 'react-redux'\nimport * as actions from '../store/actions/index.js'\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios';\nimport { withCookies, useCookies } from 'react-cookie';\nimport './ProfileManagement.css'\n\n\n\n\nfunction simulateNetworkRequest() {\n  return new Promise((resolve) => setTimeout(resolve, 100));\n}\n\n\nfunction ProfileManagement(props,auth) {\n\n  const [isLoading, setLoading] = useState(false);\n  const [validated, setValidated] = useState(false)\n  const [username, setUsername] = useState('');\n  const [fullname, setFullname] = useState('');\n  const [address1, setAddress1] = useState('');\n  const [address2, setAddress2] = useState('');\n  const [city, setCity] = useState('');\n  const [state, setState] = useState('');\n  const [zip, setZip] = useState('');\n  const [cookie_username, setCookieusername] = useState('');\n  const [cookies, setCookie] = useCookies(['user'])\n  const [userData, setUserData] = useState({});\n  const [modal_show, setModalShow] = useState(false);\n  const [modal_show_validation, setModalShowValidation] = useState(false);\n\n\n  let history=useHistory();\n\n    useEffect(() => {\n\n        // get user info from cookies.user as axios.post\n        axios.post('http://localhost:4000/users/current_user', { username: cookies.user })\n        .then((res) => {\n          if (res.status === 200) {\n          setUserData(res.data);\n          setCookieusername(cookies.user);\n          setUsername(userData.username);\n          setFullname(userData.fullname);\n          setAddress1(userData.address1);\n          setAddress2(userData.address2);\n          setCity(userData.city);\n          setState(userData.state);\n          setZip(userData.zip);\n          }\n          else if (res.status === 404) {\n            console.log('res.status: ', res.status)\n            history.push('/')\n          }\n        }).catch((error) => {\n          console.log('Error trying to fetch user data from cookie',error);\n        })\n\n        if (isLoading) {\n          simulateNetworkRequest().then(() => {\n            setLoading(false);\n          });\n        }\n      }, [cookies.user, history, isLoading, userData.address1, userData.address2, userData.city, userData.fullname, userData.state, userData.username, userData.zip]);\n\n  //const handleClick = () => setLoading(true);\n\n  const goToGetQuote = () => history.push('/getquote');\n  const handleModalClose = () => setModalShow(false);\n  const handleModal2Close = () => setModalShowValidation(false);\n\n\n  const handleRegexValidation = (userObj) => {\n    if ( (userObj.fullname.match(/^(.{2,100})$/) != null) &&\n        (userObj.address1.match(/^(.{2,200})$/) != null) &&\n        (userObj.city.match(/^(.{2,100})$/) != null) &&\n        (userObj.state.match(/^([A-Z]{2,2})$/) != null) &&\n        (userObj.zip.match(/^([0-9]{5,7})$/) != null) ) \n        {\n        console.log('all fields matched validation!')\n        return true;\n        }\n    else \n      return false;\n\n  }\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n    setValidated(false);\n    event.preventDefault();\n\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    } else {\n\n    const userObj = {\n      cookie_username: cookies.user,\n      username: cookies.user,\n      fullname: fullname,\n      address1: address1,\n      address2: address2,\n      city: city,\n      state: state,\n      zip: zip\n    }\n\n    console.log(userObj);\n\n      if (handleRegexValidation(userObj)) {\n        console.log('handlRegexValidation: true');\n          axios.post('http://localhost:4000/users/update', userObj)\n          .then((res) => {\n              console.log(res.data)\n          }).catch((error) => {\n          console.log(error)\n          });\n          setValidated(true);\n          setModalShow(true);\n          //history.push(\"/getquote\");\n      } else {\n        console.log('handlRegexValidation: false');\n        setValidated(false);\n        setModalShowValidation(true);\n      }\n\n    }\n\n  }\n\n  return (\n    <div>\n    <Container fluid className='profman-padding'>\n\n    <h1 className=\"title-page\">Profile Management</h1>\n    <div style={{\"paddingTop\":\"50px\"}}/>\n\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\n        <Row>\n          <Col md=\"3\"/>\n          <Col md=\"3\">\n            <Form.Label>Full Name: </Form.Label>\n            <Form.Control name=\"fullname\" \n                          type=\"text\"\n                          value={fullname}\n                          onChange={(e) => setFullname(e.target.value)}\n                          required/>\n            <Form.Control.Feedback type=\"invalid\">Please enter a real full name</Form.Control.Feedback>\n          </Col>\n          <Col md=\"3\">\n            <Form.Label>Username: </Form.Label>\n            <Form.Control name=\"username\"\n                          type=\"text\"\n                          value={userData.username}\n                          onChange={(e) => setUsername(e.target.value)}\n                          required/>\n            <Form.Control.Feedback type=\"invalid\">Please enter the same username from Registration</Form.Control.Feedback>\n          </Col>\n        </Row>\n        \n \n        <Row>\n\n          <Col md=\"3\"/>\n          <Col md=\"4\" style={{\"paddingTop\":\"10px\"}}>\n            <Form.Label>Address: </Form.Label>\n            <Form.Control name=\"address\" \n                          type=\"text\" \n                          value={address1}\n                          onChange={(e) => setAddress1(e.target.value)}\n                          required/>\n            <Form.Control.Feedback type=\"invalid\">Address is required</Form.Control.Feedback>\n\n            \n          </Col>\n          <Col md=\"2\" style={{\"paddingTop\":\"10px\"}}>\n            <Form.Label> Address 2 (optional) : </Form.Label>\n            <Form.Control name=\"address\" \n                          type=\"text\" \n                          value={address2}\n                          onChange={(e) => setAddress2(e.target.value)}\n                          placeholder=\"Apt no., suite, etc.\"/>\n          </Col>\n        </Row>\n  \n          \n\n        <Row>\n          <Col md=\"3\"/>\n          <Col md=\"2\" style={{\"paddingTop\":\"10px\"}}>\n          <Form.Label>City: </Form.Label>\n          <Form.Control name=\"city\" \n                        type=\"text\" \n                        value={city}\n                        onChange={(e) => setCity(e.target.value)}\n                        required/>\n          <Form.Control.Feedback type=\"invalid\">City is required</Form.Control.Feedback>\n          </Col>\n        \n\n          <Col md=\"1\" style={{\"paddingTop\":\"10px\"}}>\n          <Form.Label>State: </Form.Label>\n          <Form.Control name = \"state\" as=\"select\" \n                        value={state} \n                        onChange={(e) => setState(e.target.value)}\n                        required>\n          <option> </option>\n          <option>AL</option><option>AK</option><option>AZ</option>\n          <option>AR</option><option>CA</option><option>CO</option>\n          <option>CT</option><option>DE</option><option>FL</option>\n          <option>GA</option><option>HI</option><option>ID</option>\n          <option>IL</option><option>IN</option><option>IA</option>\n          <option>KS</option><option>KY</option><option>LA</option>\n          <option>ME</option><option>MD</option><option>MA</option>\n          <option>MI</option><option>MN</option><option>MS</option>\n          <option>MO</option><option>MT</option><option>NE</option>\n          <option>NV</option><option>NH</option><option>NJ</option>\n          <option>NM</option><option>NY</option><option>NC</option>\n          <option>ND</option><option>OH</option><option>OK</option>\n          <option>OR</option><option>PA</option><option>RI</option>\n          <option>SC</option><option>SD</option><option>TN</option>\n          <option>TX</option><option>UT</option><option>VT</option>\n          <option>VA</option><option>WA</option><option>WV</option>\n          <option>WI</option><option>WY</option>\n          </Form.Control>\n          <Form.Control.Feedback type=\"invalid\">Please select a state</Form.Control.Feedback>\n\n          </Col>\n\n          \n          <Col md=\"1\" style={{\"paddingTop\":\"10px\"}}>\n          <Form.Label> Zip code: </Form.Label>\n          <Form.Control name=\"zip\" \n                        value={zip}\n                        onChange={(e) => setZip(e.target.value)}\n                        type=\"text\" \n                        required/>\n          <Form.Control.Feedback type=\"invalid\">Please enter a valid zip code</Form.Control.Feedback>\n          </Col>\n        </Row>\n            \n\n\n        <br />\n\n        {/* figure out validation before submitting */}\n      <Row><Col md=\"5\"/><Col md=\"2\" style={{\"paddingTop\":\"1em\"}}><Button variant=\"danger\" type=\"submit\">Submit</Button></Col></Row>\n\n              {/*disabled={isLoading} \n              onClick={!isLoading ? handleClick : null}\n              href=\"/quoteform\">\n                {isLoading ? 'Submitting..' : 'Submit'}</Button>{' '}*/}\n        \n\n        \n\n\n        \n        </Form>\n      \n\n    </Container>\n\n                <Modal\n                    show={modal_show}\n                    onHide={(e) => handleModalClose()}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Profiled Updated!</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <t2>Your profile information has been updated</t2>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant='danger' onClick={() => goToGetQuote()}>Go to Get Quote</Button>\n                    </Modal.Footer>\n                </Modal>\n                <Modal\n                    show={modal_show_validation}\n                    /* onHide={(handleModalClose)} */>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Invalid Inputs!</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <t2>Full name must be between 2 and 100 characters</t2><br/>\n                        <t2>Address1 must be between 2 and 200 characters</t2><br/>\n                        <t2>City must be between 2 and 100 characters</t2><br/>\n                        <t2>One state must be selected</t2><br/>\n                        <t2>Zip code must be between 5 and 7 numbers</t2>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant='danger' onClick={() => handleModal2Close()}>Close</Button>\n                    </Modal.Footer>\n                </Modal>\n    </div>\n  );\n}\n\n\nexport default ProfileManagement;\n","export default __webpack_public_path__ + \"static/media/cougar-gas.0b6a0bb4.png\";","import {Container, Button, Form, Row, Col} from 'react-bootstrap'\nimport React, { useEffect, useState } from \"react\";\nimport NavBar from \"./NavBar\";\nimport axios from 'axios';\nimport { useHistory, Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux'\nimport * as actions from '../store/actions/index.js';\nimport logo from '../images/cougar-gas.png'\nimport { withCookies, useCookies } from 'react-cookie';\n\n/* Login Validation:\n- Username: 3-30 characters, required\n- Password: 5-50 characters, required\n*/\n\nconst bcrypt = require('./custom-bcrypt');\n\nfunction simulateNetworkRequest() {\n    return new Promise((resolve) => setTimeout(resolve, 100));\n  }\nconst Login = (props) => {\n  const [validated, setValidated] = useState(false);\n    const [isLoading, setLoading] = useState(false);\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [redirect, setRedirect] = useState(false);\n\n    const [cookies, setCookie] = useCookies(['user'])\n\n\n    let history=useHistory();\n\n    useEffect(() => {\n        if (isLoading) {\n          simulateNetworkRequest().then(() => {\n            setLoading(false);\n          });\n        }\n      }, [isLoading]);\n\n  const handleClick = () => setLoading(true);\n\n  const handleRegexValidation = (userObj) => {\n    if ((userObj.password.match(/^((?=.*[A-Z])(?=.*[0-9]).{5,50})$/) != null) &&\n        (userObj.username.match(/^(\\w{3,30})$/) != null))\n        return true;\n    else \n      return false;\n  }\n\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n    setValidated(false);\n    event.preventDefault();\n\n    /*check front-end validation */\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    } else {    \n\n      \n      const userObj = {\n        username: username,\n        password: /*bcrypt.hash(password)*/ password\n      }\n\n      if (handleRegexValidation(userObj)) {\n\n        /* authenticate user credentials */\n        axios.post('http://localhost:4000/users/authenticate', userObj)\n        .then((res) => {\n        setCookie('user', userObj.username, {\n          path: '/'\n        });\n        console.log(cookies.user)\n        window.location.reload(); //history.push('/home')\n        \n        }).catch((err) => {\n        console.log('Error in Login axios.post: ', err);\n        alert('User not found with inputted credentials. Please try again');\n        })\n      setValidated(true);\n      }\n      else {\n        setValidated(false);\n        alert('Username must be between 3 and 30 characters.\\nPassword must be between 5 and 50 characters with at least one uppercase & one number')\n      }\n    }\n\n  }\n  \n    return (\n        <>\n\n        \n        \n        <Container fluid className=\"title-padding\">\n\n            <div style={{\"alignContent\":\"center\"}}>\n                <img src={logo} alt=\"Cougar Gas Logo\"/>\n            </div>\n            <div style={{\"alignContent\":\"center\", \"paddingBottom\":\"30px\"}}>\n            <h1 className=\"title-page\">Welcome to COUGAR GAS INC.!</h1>\n            </div>\n\n\n            \n           \n\n            <Form noValidate \n                  validated={validated}\n                  onSubmit={handleSubmit}>\n            <Row>\n                <Col md=\"4\"></Col>\n                <Col md=\"4\">\n                  \n                    <Form.Label>Username</Form.Label>\n                    <Form.Control type=\"text\" \n                                  onChange={(e) => setUsername(e.target.value)}\n                                  required/>\n                    <Form.Control.Feedback type=\"invalid\">Please provide a username</Form.Control.Feedback>\n                </Col>\n            </Row>\n            <Row>\n                <Col md=\"4\"></Col>\n                <Col>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" \n                                  onChange={(e) => setPassword(e.target.value)}\n                                  required/>\n                    <Form.Control.Feedback type=\"invalid\">Please provide a password</Form.Control.Feedback>\n                </Col>\n                <Col md=\"4\"></Col>\n            </Row>\n        <br />\n        <Row>\n            <Col md=\"5\"></Col>\n            <Col md=\"auto\"><Button variant=\"light\" href=\"/registration\">Sign up</Button></Col>\n            <Col md=\"auto\">    \n                <Button variant=\"danger\" type=\"submit\">Log in</Button>{' '}\n            </Col>\n            <Col></Col>\n        </Row>\n        </Form>\n\n\n        \n\n        </Container>\n        </>\n    )\n}\n\n/* const mapStateToProps = state => ({\n  auth: state.AuthReducer\n}); */\n\n//export default connect(mapStateToProps, actions)(Login);\nexport default Login;","import {Container, Button, Form, Row, Col, Modal} from 'react-bootstrap'\nimport React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport NavBar from './NavBar'\nimport { useHistory } from \"react-router-dom\";\nimport logo from '../images/cougar-gas.png'\nconst bcrypt = require('./custom-bcrypt');\n\n\n\nfunction simulateNetworkRequest() {\n    return new Promise((resolve) => setTimeout(resolve, 100));\n}\nconst Registration = () => {\n    const [validated, setValidated] = useState(false);\n    const [isLoading, setLoading] = useState(false);\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [modal_show, setModalShow] = useState(false);\n\n    let history=useHistory();\n\n    useEffect(() => {\n        if (isLoading) {\n            simulateNetworkRequest().then(() => {\n                setLoading(false);\n            });\n        }\n    }, [isLoading]);\n\n    const handleClick = () => setLoading(true);\n\n    const handleModalClose = () => setModalShow(false);\n\n    const handleRegexValidation = (userObj) => {\n        if ((userObj.password.match(/^((?=.*[A-Z])(?=.*[0-9]).{5,50})$/) != null) &&\n            (userObj.username.match(/^(\\w{3,30})$/) != null))\n            return true;\n        else \n          return false;\n      }\n\n    const goToLogin = () => history.push('/login');\n\n    const handleSubmit = (event) => {\n        const form = event.currentTarget;\n        setValidated(false);\n        event.preventDefault();\n\n        if (form.checkValidity() === false) {\n            event.stopPropagation();\n        } else {\n            const userObj = {\n                username: username,\n                password: password\n            }\n\n            if (handleRegexValidation(userObj)) {\n                axios.post('http://localhost:4000/users/create', userObj)\n                .then((res) => {\n                    if (res.data === 'USER_EXISTED') {\n                        alert('Username already existed!');\n                    } else {\n                        console.log(res.data);\n                        setModalShow(true);\n                        setValidated(true);\n                    }\n                }).catch((error) => {\n                    alert('Error when trying to register new user')\n                    console.log(error)\n                });\n            } else {\n                setValidated(false);\n                alert('Username must be between 3 and 30 characters.\\nPassword must be between 5 and 50 characters with at least one uppercase & one number')\n              }\n\n        }\n    }\n\n    return (\n        <>\n\n        \n        <Container fluid className=\"title-padding\">\n\n            <div style={{\"alignContent\":\"center\"}}>\n                        <img src={logo} alt=\"Cougar Gas Logo\"/>\n            </div>\n            \n            <Row style={{\"paddingBottom\":\"30px\"}}>\n                <Col md=\"5\"></Col>\n                <Col md=\"2\">\n                    <h1 className=\"title-page\">Registration</h1>\n                </Col>\n                <Col md=\"5\"></Col>\n            </Row>\n            \n\n            <Form   noValidate \n                    validated={validated} \n                    onSubmit={handleSubmit}>\n            <Row>\n                <Col md=\"4\"></Col>\n                <Col md=\"4\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control type=\"text\"\n                                  value={username}\n                                  onChange={(e) => setUsername(e.target.value)}\n                                  required/>\n                    <Form.Control.Feedback type=\"invalid\">Please provide a username</Form.Control.Feedback>\n                </Col>\n            </Row>\n            <Row>\n                <Col md=\"4\"></Col>\n                <Col>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\"\n                                  value={password}\n                                  onChange={(e) => setPassword(e.target.value)}\n                                  required/>\n                    <Form.Control.Feedback type=\"invalid\">Please provide a password</Form.Control.Feedback>\n                </Col>\n                <Col md=\"4\"></Col>\n            </Row>\n        <br />\n        <Row>\n            <Col md=\"5\"></Col>\n            <Col md=\"auto\">\n                <Button variant=\"light\" href=\"login\">Back to Login</Button>   \n            </Col>\n            <Col md=\"auto\"> \n                <Button variant=\"danger\" type=\"submit\" onClick={(e) => handleSubmit(e)}>Sign up</Button>{' '}\n            </Col>\n            <Col></Col>\n        </Row>\n        </Form>\n\n\n        \n\n        </Container>\n\n                <Modal\n                    show={modal_show}\n                    /* onHide={(handleModalClose)} */>\n                    <Modal.Header closeButton>\n                        <Modal.Title>User Created!</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <t2>Your account has been created!</t2>\n                        <br/>\n                        <t2>Log in to access your new account</t2>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant='danger' onClick={() => goToLogin()}>Login</Button>\n                    </Modal.Footer>\n                </Modal>\n        </>\n\n    )\n}\n\nexport default Registration","import React, { useMemo } from 'react'\nimport { useTable } from 'react-table'\nimport MOCK_DATA from './MOCK_DATA.json'\nimport { COLUMNS } from './Columns'\nimport './History.css'\nimport { Link } from 'react-router-dom'\nimport NavBar from './NavBar'\nimport {useState, useEffect } from 'react'\nimport axios from 'axios'\nimport {Row, Col, Container} from 'react-bootstrap'\nimport { withCookies, useCookies } from 'react-cookie';\nimport * as ReactBootstrap from 'react-bootstrap'\n\nconst History = () => {\n    const [userList, setUserList] = useState([]);\n    const [cookies, setCookie] = useCookies(['user']);\n    const number = 1;\n\n    useEffect(() => {\n        axios.post('http://localhost:4000/users/history', {username: cookies.user})\n            .then(res => {\n                setUserList(res.data);\n                console.log('userList: ', userList);\n                \n            })\n            .catch(function (error) {\n                console.log('Error: ',error);\n            })\n    }, [cookies.user]);\n\n    const renderHistory = (data, index) => {\n        return(\n            <tr>\n                {/*<td>{data.username}</td>*/}\n                <td>{data.gallons_requested}</td>\n                <td>{data.delivery_address}</td>\n                <td>{data.delivery_date}</td>\n                <td>{data.price_per_gallon}</td>\n                <td>{data.amount_due}</td>\n            </tr>\n        )\n    }\n\n    return (\n        <div>\n            {/*<h1 id = 'title'>Hello there</h1>*/}\n\n            <ReactBootstrap.Table striped bordered hover>\n                <thead>\n                    <tr>\n                        {/*<th>Username</th>*/}\n                        <th>Gallons Requested</th>\n                        <th>Delivery Address</th>\n                        <th>Delivery Date</th>\n                        <th>Price Per Gallon</th>\n                        <th>Amount Due</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {userList.map(data => {\n                        return(\n                            <tr>\n                                {/*<td>{data.username}</td>*/}\n                                <td>{data.gallons_requested}</td>\n                                <td>{data.delivery_address}</td>\n                                <td>{data.delivery_date}</td>\n                                <td>{data.price_per_gallon}</td>\n                                <td>{data.amount_due}</td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </ReactBootstrap.Table>\n\n            {/*\n            <Container>{userList.map((data, i) => {console.log(data.username); return <Row><Col>{data.username}</Col><Col>{data.gallons_requested}</Col></Row>;})}</Container>\n            */}\n        </div>\n    )\n/*\n    const columns = useMemo(() => COLUMNS, [])\n    const data = useMemo(() => MOCK_DATA, [])\n\n    const tableInstance = useTable({\n        columns,\n        data\n    })\n\n    const { getTableProps,\n            getTableBodyProps, \n            headerGroups, \n            rows, \n            prepareRow } = tableInstance \n\n    return (\n        <div>\n        <NavBar loggedIn={true}/>\n        <table {...getTableProps()}>\n            <thead>\n                {\n                    headerGroups.map(headerGroup => (\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                            {\n                                headerGroup.headers.map( column => (\n                                    <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n                                ))\n                            }\n                        </tr>\n                    ))\n                }\n            </thead>\n            <tbody {...getTableBodyProps()}>\n                {\n                    rows.map(row => {\n                        prepareRow(row)\n                        return (\n                            <tr {...row.getRowProps()}>\n                                {\n                                    row.cells.map( cell => {\n                                        return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                                    })\n                                }\n                            </tr>\n                        )\n                    })\n                }\n            </tbody>\n            <h4>Version 1.0.0</h4>\n            <Link to='/'>Go Back</Link>\n            \n        </table>\n        </div>\n        \n    )*/\n}\n\nexport default History\n","export const ACCCOLUMNS = [\n    {\n        Header: 'Name',\n        accessor: 'name'\n    },\n    {\n        Header: 'Address',\n        accessor: 'address'\n    },\n    {\n        Header: 'City',\n        accessor: 'city'\n    },\n    {\n        Header: 'State',\n        accessor: 'state'\n    },\n    {\n        Header: 'Zip Code',\n        accessor: 'zip_code'\n    }\n]","import React, { useMemo } from 'react'\nimport { useTable } from 'react-table'\nimport AccDetails from './AccDetails.json'\nimport { ACCCOLUMNS } from './AccColumns'\nimport { Link } from 'react-router-dom'\nimport NavBar from './NavBar'\n\nconst AccountDetails = () => {\n\n    const columns = useMemo(() => ACCCOLUMNS, [])\n    const data = useMemo(() => AccDetails, [])\n\n    const tableInstance = useTable({\n        columns,\n        data\n    })\n\n    const { getTableProps,\n            getTableBodyProps, \n            headerGroups, \n            rows, \n            prepareRow } = tableInstance \n\n    return (\n        <>\n                <NavBar loggedIn={true}/>\n\n        <table {...getTableProps()}>\n            <thead>\n                {\n                    headerGroups.map(headerGroup => (\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                            {\n                                headerGroup.headers.map( column => (\n                                    <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n                                ))\n                            }\n                        </tr>\n                    ))\n                }\n            </thead>\n            <tbody {...getTableBodyProps()}>\n                {\n                    rows.map(row => {\n                        prepareRow(row)\n                        return (\n                            <tr {...row.getRowProps()}>\n                                {\n                                    row.cells.map( cell => {\n                                        return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                                    })\n                                }\n                            </tr>\n                        )\n                    })\n                }\n            </tbody>\n            <h4>Version 1.0.0</h4>\n            <Link to='/'>Go Back</Link>\n            \n        </table>\n        </>\n    )\n}\n\nexport default AccountDetails\n","import {Container, Row, Col} from 'react-bootstrap'\nimport NavBar from './NavBar'\nimport cougar_gas from '../images/cougar-gas.png'\n\nconst Home = () => {\n    return (\n        <>\n        <Container style={{\"paddingTop\":\"100px\"}}>\n            \n                    <div style={{\"alignContent\":\"center\"}}>\n                        <img src={cougar_gas} alt=\"Cougar Gas Logo\"/>\n                    </div>\n                    <h1 className=\"title-page\" style={{\"paddingBottom\":\"0.6em\"}}>Welcome to COUGAR GAS INC.!</h1>\n                    <Row>\n                        <Col md=\"3\"/>\n                        <Col>\n                        <t3 style={{\"alignContent\":\"center\"}}>Click an option on the Navigation Bar above to navigate to a page</t3> <br/>\n                        <t3 style={{\"alignText\":\"center\"}}>Go to <a href='/profilemanagement' style={{\"color\":\"red\"}}>Profile Management</a> if you haven't set up your profile</t3>\n                        </Col>\n                        <Col md=\"auto\"></Col>\n                    </Row>\n            \n        </Container>\n        </>\n    )\n}\n\nexport default Home\n","import {\n    BrowserRouter as Router, Switch, Route, Redirect,\n} from 'react-router-dom'\nimport axios from 'axios'\nimport { withCookies, useCookies } from 'react-cookie';\nimport React, { useEffect, useState } from \"react\";\n\n\nimport QuoteForm from './components/QuoteForm'\nimport ProfileManagement from './components/ProfileManagement'\nimport Login from './components/Login'\nimport Registration from './components/Registration'\nimport History from './components/History'\nimport AccountDetails from './components/AccountDetails'\nimport Navbar from './components/NavBar'\nimport Home from './components/Home'\nimport withAuthorization from './components/withAuthorization'\nimport { connect } from 'react-redux'\nimport * as actions from './store/actions'\n\n\n\n\n//const mongoose = require('mongoose')\n\nconst App = () => {\n    const [cookies, setCookie] = useCookies(['user'])\n    const [is_logged_in, setLoggedIn] = useState(false);\n\n\n    useEffect(() => {\n        if (cookies.user === '' || cookies.user === undefined) {\n            setLoggedIn(false);\n        } else {\n            setLoggedIn(true);\n        }\n    }, [cookies.user])\n\n    return (\n        <div>\n            <div className={!is_logged_in ? \"table display-on\" : \"table display-off\"}>\n            <Router>\n                <Switch>\n                    <Route exact path=\"/\" component={Login} />\n                    <Route exact path=\"/registration\" component={Registration} />\n                    <Route exact path=\"/login\" component={Login} />\n                </Switch>\n            </Router>\n                \n            </div>\n\n            <div className={is_logged_in ? \"table display-on\" : \"table display-off\"}>\n            <Navbar loggedIn={true}/>\n            <Router>\n                <Switch>\n                    <Route exact path=\"/\" component={Home} />\n                    <Route exact path=\"/login\" component={Home}/>\n                    <Route exact path=\"/register\" component={Home}/>\n                    <Route exact path=\"/home\" component={Home} />\n                    <Route path=\"/getquote\" component={QuoteForm} />\n                    <Route path=\"/profilemanagement\" component={ProfileManagement}/>\n                    {/* <Route path=\"/login\" component={Login} /> */}\n                    <Route path=\"/quotehistory\" component={History} />\n                    <Route path=\"/accountdetails\" component={AccountDetails} />\n                </Switch>\n            </Router>\n            </div>\n        </div>\n\n    );\n}\n\nfunction mapStateToProps(state) {\n    return { \n      auth: state.AuthReducer,\n     };\n}\n\nexport default App;\n//export default connect(mapStateToProps, actions)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/NotoSansSC-Medium.682b4b8d.otf\";","import * as ACTION_TYPES from '../constant/action-types'\n\nconst initialState = {\n    username: '',\n    password: ''\n}\n\nexport const AuthReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case ACTION_TYPES.UPDATE_USER:\n            return action.payload || false\n\n        default:   \n            return state\n    }\n}","import { UPDATE_USER } from '../constant/action-types'\nimport { AuthReducer } from './auth_reducers'\nimport { combineReducers } from 'redux'\n\nconst initialState = {\n    userInfo: {\n        username: '',\n        password: '',\n    }\n}\n\nconst rootReducer = combineReducers({\n    AuthReducer\n});\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './fonts/NotoSansSC-Medium.otf'\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reducers from './store/reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { CookiesProvider } from \"react-cookie\";\n\n\nimport reduxThunk from 'redux-thunk'\n\nfunction saveToLocalStorage(state) {\n  try {\n    const serializedState = JSON.stringify(state)\n    localStorage.setItem('state', serializedState)\n  } catch (err) {\n    console.log(err)\n  }\n}\n\nfunction loadFromLocalStorage() {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) return undefined;\n    return JSON.parse(serializedState)\n  } catch (err) {\n    console.log(err)\n    return undefined;\n  }\n}\n\nconst persistedState = loadFromLocalStorage();\n\nconst store = createStore(reducers, persistedState, composeWithDevTools(\n  applyMiddleware(reduxThunk)\n));\n\nReactDOM.render(\n  <CookiesProvider>\n  <BrowserRouter>\n    <Provider store={store}>\n    <App />\n    </Provider>,\n  </BrowserRouter>\n  </CookiesProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}